Oui, c'est tout à fait plausible ! Par défaut, un conteneur Docker n’hérite pas automatiquement des paramètres réseau de l’hôte, y compris les configurations de proxy. Donc, si ton serveur passe par un proxy pour accéder à Internet, le conteneur doit être explicitement configuré pour utiliser ce proxy.

### Solution possible :
Tu peux définir les variables d’environnement `http_proxy`, `https_proxy` et `no_proxy` dans ta commande Docker afin que le conteneur puisse passer par le proxy. Voici comment tu pourrais modifier ta commande :

```bash
docker run -ti --rm \
  -e http_proxy=http://localhost:3129 \
  -e https_proxy=http://localhost:3129 \
  -e no_proxy=localhost,127.0.0.1 \
  -v ~/.ssh:/root/.ssh \
  -v ~/.aws:/root/.aws \
  -v $(pwd):/apps \
  -w /apps alpine/ansible \
  ansible-galaxy collection install ibm.ibm_zos_core
```

Cela permet au conteneur d’utiliser le proxy spécifié. 

### Alternative : Modifier la configuration Docker
Si tu veux que tous les conteneurs Docker utilisent le proxy par défaut, tu peux ajouter une configuration dans `/etc/systemd/system/docker.service.d/http-proxy.conf` :

```ini
[Service]
Environment="HTTP_PROXY=http://localhost:3129"
Environment="HTTPS_PROXY=http://localhost:3129"
Environment="NO_PROXY=localhost,127.0.0.1"
```

Ensuite, recharge la configuration et redémarre Docker :

```bash
sudo systemctl daemon-reload
sudo systemctl restart docker
```

Essaye ces solutions et dis-moi si le problème persiste !

