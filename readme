Fichier .nanorc prêt à l’emploi

Voici un .nanorc propre qui active les numéros de ligne, des tabulations de 2 espaces, la conversion des tabulations en espaces, et l’affichage permanent de la position du curseur (ligne, colonne) avec des indicateurs utiles.

`nanorc

Affichage et navigation
set linenumbers          # Numéros de ligne
set constantshow         # Afficher en permanence ligne/colonne (+ comptes)
set indicator            # Barre de défilement/position sur le côté
set smarthome            # Home intelligent (début de ligne puis colonne 1)
set mouse                # Souris activée (sélection, clic pour déplacer)

Tabulations et indentation
set tabsize 2            # Tabulation logique = 2 colonnes
set tabstospaces         # Remplacer les tabs par des espaces
set autoindent           # Indentation automatique sur nouvelle ligne

Barre d’état
set stateflags           # Indicateurs d’état (modifié, lecture seule, etc.)

set minibar            # Barre d’état minimaliste (décommente si tu préfères)

Couleurs (facultatif, ajustables)
set titlecolor brightwhite,blue
set statuscolor brightwhite,green
set errorcolor brightwhite,red
set selectedcolor black,cyan
set numbercolor yellow
set keycolor cyan
set functioncolor brightwhite,black
set scrollercolor cyan
`

---

À propos de la surbrillance de la ligne courante

Nano peut afficher la position (ligne/colonne) en continu avec set constantshow, mais la surbrillance permanente de la ligne courante dépend de la version de nano. Dis‑moi la sortie de:

`bash
nano --version
`

- Si ta version le permet, je t’ajoute la ou les directives exactes pour la surbrillance de la ligne active.
- Sinon, on pourra utiliser des alternatives ergonomiques (p. ex. accentuer les numéros de ligne et l’indicateur de position) ou envisager une mise à jour.



Voici la liste complète des alias Git définis par le plugin git de Oh My Bash, prête à être copiée et collée dans ton fichier ~/.bashrc ou dans un script de configuration :

`bash

Alias Git de Oh My Bash

alias g='git'
alias ga='git add'
alias gaa='git add --all'
alias gc='git commit'
alias gca='git commit --all'
alias gcmsg='git commit -m'
alias gd='git diff'
alias gdca='git diff --cached'
alias gf='git fetch'
alias gg='git gui citool'
alias gl='git pull'
alias gpr='git pull --rebase'
alias gp='git push'
alias gs='git status'

Branches et fusion
alias gcb='git checkout -b'
alias gco='git checkout'
alias gm='git merge'
alias grb='git rebase'
alias grbi='git rebase --interactive'
alias grbd='git rebase develop'
alias gsw='git switch'

Tags
alias gta='git tag --annotate'
alias gts='git tag --sign'
alias gtv='git tag'

Divers
alias gclean='git clean -fd'
alias gunwip='git reset HEAD~1'
alias gignore='git update-index --assume-unchanged'
alias gunignore='git update-index --no-assume-unchanged'
alias gcount='git shortlog -sn'
alias gk='gitk --all --branches'
alias gke='gitk --all --branches --simplify-by-decoration'
`

---

Tu veux que je t’aide à créer un script d’installation automatique pour ces alias, ou à les intégrer dans un environnement multi-shell (bash + zsh) ?