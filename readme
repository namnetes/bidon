Le document "AI Council Fall 2023 Session 4 - AI Use cases-1.pdf" présente divers cas d'utilisation de l'IA sur les systèmes IBM Z. Il met en évidence comment l'IA sur IBM Z apporte de la valeur dans de nombreux secteurs.

Le document s'articule autour des points suivants :

1.  **Introduction**.
2.  Une sélection de **cas d'utilisation clients**.
3.  Des **approfondissements sur l'architecture**.
4.  Une démonstration de l'**Anti-Money Laundering (AML)**.

Le document détaille plusieurs cas d'utilisation clients dans les secteurs de la banque et de la finance, ainsi que dans d'autres industries.

**Dans le secteur bancaire et financier, les cas d'utilisation présentés incluent :**

*   **Détection de fraude et prévention** : Un cas client majeur est la détection de fraude sur les transactions de cartes de crédit. Un client bancaire américain ne pouvait pas analyser toutes les transactions en temps réel en raison de la latence et de l'incapacité de leur moteur de scoring hors plateforme à s'adapter, ce qui laissait 80 % des transactions non scorées pour la fraude. En co-localisant leur modèle sur IBM Z, ils ont pu **analyser chaque transaction en temps réel**, réduisant la fraude, les coûts et augmentant la satisfaction client. Ils ont atteint des temps de réponse cohérents et plus bas (passant de plus de 50ms à 1ms) et ont pu scorer 100 % des transactions, augmentant le débit de 1800 TPS à 20 000 TPS.
*   **Clearing et Settlement** : Un processeur de cartes de crédit cherchait à identifier les transactions à haut risque avant leur règlement. L'utilisation de l'IA pour la mitigation des risques a permis de **prédire les transactions potentiellement risquées** et de proposer des solutions pour un processus de règlement plus efficace. Cela a permis d'atteindre confortablement 5000 TPS avec une latence inférieure à 5 millisecondes en utilisant un framework d'IA open source sur IBM Z.
*   **Anti-Money Laundering (AML) dans les paiements instantanés** : Une grande banque européenne devait intégrer le dépistage AML en temps réel dans son flux opérationnel de paiements instantanés en raison de réglementations plus strictes. L'IA sur IBM Z permet d'**augmenter la précision du dépistage AML**, de respecter les exigences réglementaires plus strictes sans impacter les accords de niveau de service (SLAs). Le document souligne l'importance d'une approche robuste pilotée par l'IA face à la sophistication croissante du blanchiment d'argent et aux amendes réglementaires. Les avantages incluent une **réduction significative des faux positifs** (jusqu'à 72%) et une **amélioration de la détection des transactions illicites** (jusqu'à 600%) par rapport aux pratiques actuelles. L'objectif est un scoring à 100% en temps réel sous des SLAs stricts.
*   **Scoring de risque de découvert (Overdraft Limit Default)** : Une institution financière a besoin de déterminer le risque de découvert lors d'une transaction. En augmentant l'approche basée sur des règles existantes avec l'IA, ils peuvent permettre des ajustements intelligents de la limite de découvert qui **réduisent l'exposition au risque**. Cela inclut la prédiction et la création de limites dynamiques basées sur des scénarios comme les dépenses saisonnières, les changements de salaire, la fidélisation de la clientèle ou l'ajout de nouveaux comptes.
*   **Contingence du système de paiement** : Une banque a besoin d'un plan de contingence pour évaluer le risque d'autoriser les paiements en cas d'indisponibilité de leur système principal. Ils utilisent désormais l'IA pour **surveiller les tendances de paiement et le comportement des clients** afin de décider du risque d'autoriser les transactions.
*   **Approbation de prêts** : Un prêteur cherche à accélérer le processus d'approbation des prêts à la consommation. L'utilisation de l'IA a entraîné une **réduction de la latence de plus de 1000X**, avec une diminution correspondante du risque pour le prêteur.
*   **Gaming the system** : Identifier la fraude parmi les utilisateurs qui tirent un avantage illicite des programmes de récompenses des cartes de crédit. L'IA a permis de **découvrir des informations précieuses** pour détecter les anomalies et les valeurs aberrantes.

**Dans d'autres industries, les cas d'utilisation comprennent :**

*   **Services de Chatbot** : Automatiser les processus répétitifs comme l'enregistrement des véhicules et offrir une expérience utilisateur personnalisée.
*   **Diagnostic d'imagerie médicale** : Analyser de grands volumes de dossiers médicaux tout en respectant la conformité réglementaire et en améliorant l'efficacité.
*   **Souscription d'assurance** : Aider les souscripteurs à identifier les facteurs de risque et à déterminer les taux de prime compétitifs. L'IA a considérablement **réduit le temps de traitement**, le ramenant à quelques secondes.
*   **Fraude aux réclamations** : Automatiser le processus de traitement des réclamations pour fraude qui était manuel et intensif. L'IA a permis d'**atteindre l'automatisation du traitement des réclamations**, réduisant le temps de traitement à quelques secondes.

Le document met en avant les **capacités logicielles** utilisées pour ces cas d'utilisation, notamment Machine Learning for z/OS, Triton Inference Server, SQL Data Insights for Db2 on z/OS, IBM ODM, IBM IMS et Deep Learning Compiler.

Il souligne également les **bénéfices de l'exécution de l'IA en temps réel** pour les transactions, incluant la co-localisation de l'inférence, la performance élevée (faible temps de réponse et haut débit), la sécurité inégalée des données et transactions par la plateforme IBM Z, et la possibilité d'utiliser les compétences standards de l'industrie et de déployer sur IBM Z tout en **apportant les investissements IA existants**. Les modèles d'IA peuvent être pré-entraînés sur n'importe quelle plateforme, puis importés, déployés et gouvernés sur IBM Z.

-----------

L'autre source que vous mentionnez, "AI Council - AI Strategy Spring 2025.pdf", présente la **stratégie d'IA sur IBM Z et LinuxONE**. Ce document met l'accent sur l'importance de l'infrastructure pour l'IA et détaille comment IBM Z et LinuxONE sont positionnés pour répondre aux exigences des charges de travail d'IA modernes.

Voici les points clés présentés dans ce document :

1.  **Tendances et exigences de l'infrastructure axée sur l'IA** : Le document souligne que l'IA est gourmande en calcul et nécessite une infrastructure spécialisée. Les principales tendances et exigences incluent l'augmentation significative de la consommation d'énergie, le nombre croissant de paramètres de modèle, l'impératif de sécurité face à la prolifération des données et aux violations, les exigences de faible latence pour les charges de travail à volume élevé, l'intégration de l'IA dans les environnements existants, la précision des modèles, les exigences de calcul pour l'IA générative (GenAI), et les préoccupations liées à la consommation d'énergie, aux coûts et à l'empreinte environnementale.
2.  **Défis de déploiement de l'IA à l'échelle** : Le document indique que construire l'IA est difficile, et la faire évoluer l'est encore plus en raison de l'augmentation constante des données et de la diversité des environnements. Pour relever ces défis, il est crucial de **co-localiser les données et les transactions avec l'IA**. 84% des responsables informatiques estiment qu'incorporer l'IA dans les transactions mainframe est important. Le document insiste également sur la nécessité de **favoriser l'innovation sans compromettre la sécurité et la résilience**, notant que 79% des responsables informatiques s'accordent à dire que les mainframes sont essentiels pour l'innovation axée sur l'IA.
3.  **Valeur de l'IA sur IBM Z** : Le document positionne l'IA sur IBM Z pour des **aperçus en temps réel avec des performances supérieures et une latence optimale**. Étant donné que plus de 70% des transactions mondiales s'exécutent sur le mainframe, l'exécution de l'IA sur cette plateforme native offre des avantages clés en termes de **sécurité, résilience, scalabilité, performance et disponibilité**.
4.  **Paysage de l'IA et cas d'utilisation** : Le document couvre le paysage de l'IA, y compris l'**IA prédictive** et l'**IA générative**, qui façonnent l'entreprise moderne. Il présente un certain nombre de **cas d'utilisation clients** dans des secteurs comme la banque et la finance, et d'autres industries. Il souligne également l'importance d'une **architecture d'IA multi-modèles** pour les cas d'utilisation critiques et transactionnels afin d'obtenir de meilleurs résultats commerciaux. Des exemples de cas d'utilisation spécifiques sont listés, tels que la détection de fraude, la lutte contre le blanchiment d'argent (AML), l'analyse des images médicales, les chatbots, la souscription d'assurance, etc..
5.  **Pile logicielle de l'écosystème AI on IBM Z** : La stratégie s'appuie sur une pile logicielle conçue pour les "Business Insights" et l'"Intelligent Infrastructure". Cela inclut des produits comme Cloud Pak for Data on IBM Z, Db2 for z/OS with SQL Data Insights, AI Toolkit for IBM Z and LinuxONE pour les insights métiers, et IBM Z Operations Unite, IBM Db2 AI for z/OS, AI-Infused IBM z/OS V3.1, AI-Powered IBM Security, watsonx Assistant et Code Assistant for IBM Z pour l'infrastructure intelligente. Le document mentionne le support d'outils open source populaires comme Snap ML et le Deep Learning Compiler.
6.  **Accélération matérielle de l'IA** : Un élément clé de la stratégie est l'intégration d'accélérateurs d'IA dédiés à faible latence. Le document mentionne les processeurs **Telum I et Telum II** (accélérateur d'IA intégré sur puce) et l'**accélérateur Spyre** (accélérateur d'IA attaché à l'hôte). Telum II, par exemple, permet de traiter des milliards de requêtes d'inférence par jour avec une faible latence. L'accélérateur Spyre est conçu pour gérer les grands modèles linguistiques (LLMs) et les cas d'utilisation de l'IA générative. La stratégie différencie l'utilisation de Telum II pour l'IA prédictive et les LLMs Encoder, et Spyre pour les LLMs Decoder et les charges de travail de GenAI plus complexes.
7.  **Approches avancées de l'IA** : Le document explore les façons dont l'IA peut être avancée sur IBM Z :
    *   **Inférence, Assistants et Agents** : IBM z17 fournit une base pour l'inférence à l'échelle transactionnelle, les assistants basés sur la GenAI (comme pour le code ou les opérations), et les agents qui travaillent de manière proactive vers des objectifs.
    *   **IA Agentive** : Présentée comme une IA capable d'agir de manière autonome pour atteindre un objectif. Elle devrait simplifier considérablement le développement et les opérations sur IBM Z et LinuxONE.
    *   **IA Confidentielle** : Adressée pour protéger les données sensibles utilisées dans l'IA, en particulier dans les industries réglementées. Elle utilise des fonctionnalités telles que la protection de la mémoire et le chiffrement pour protéger les processus d'IA.
    *   **Technique d'IA Multi-modèles** : Présentée comme un moyen d'améliorer la précision et d'élargir les insights en combinant différents modèles d'IA. Des exemples détaillés sont donnés pour la détection avancée de fraude, le traitement avancé des demandes d'assurance, l'analyse de fraude et de sentiment pour les demandes de prestations gouvernementales, et la lutte contre le blanchiment d'argent.
8.  **Sécurisation de l'IA avec la pile IBM Z** : Le document met en avant les fonctionnalités de sécurité inhérentes à la plateforme IBM Z pour protéger les charges de travail d'IA. Cela inclut l'utilisation de frameworks open source testés, la protection des données sensibles par des données synthétiques, le maintien du cycle de vie de l'IA dans des environnements de confiance, la gouvernance des modèles pour la transparence et la conformité, la surveillance des modèles pour l'équité et l'explicabilité, et l'utilisation de technologies comme Hyper Protect Container Runtime et le chiffrement résistant au quantum.
9.  **Vision de watsonx et IBM Z** : Le document décrit comment watsonx s'intègre à IBM Z. Cela permet d'intégrer la valeur des LLMs, d'utiliser des données d'entreprise gouvernées pour l'affinement (fine-tuning) des LLMs en toute sécurité, et de déployer des services d'IA puissants et évolutifs. Watsonx.ai offre une gamme de LLMs, watsonx.governance assure la confiance et la transparence tout au long du cycle de vie de l'IA.
10. **Produits et chemin pour commencer** : Le document liste les produits IBM Z et LinuxONE utilisés dans le cycle de vie de l'IA (apprentissage, déploiement, service, gouvernance). Il décrit également un chemin pour les clients souhaitant démarrer avec l'IA sur IBM Z, impliquant un briefing client, un atelier de découverte et un pilote/preuve de concept.
11. **Valeur commerciale** : La stratégie vise à **améliorer l'efficacité opérationnelle de l'IT**, à **faire évoluer durablement les déploiements d'IA** et à **améliorer les résultats commerciaux** en tirant parti des qualités de service d'IBM Z. Des exemples chiffrés sont fournis concernant la réduction de l'énergie et l'augmentation du débit par rapport à d'autres plateformes.

En résumé, le document "AI Council - AI Strategy Spring 2025.pdf" présente une **stratégie globale pour le déploiement et l'exploitation de l'IA sur la plateforme IBM Z et LinuxONE**. Il aborde les tendances du secteur, les défis, la proposition de valeur d'IBM Z, les capacités logicielles et matérielles, les approches avancées de l'IA (multi-modèles, agentive, confidentielle), la sécurité, l'intégration avec watsonx, et le chemin pratique pour les clients.

----------------------

Oui, d'après les documents fournis, vous avez tout à fait raison d'avoir ce sentiment. Le second document, ainsi que le premier, montrent clairement qu'il est **possible pour les applications écrites en COBOL sur IBM Z d'interagir avec l'IA**.

L'interaction se fait principalement par l'intermédiaire de **Machine Learning for z/OS (MLz)**, en utilisant notamment le service ou programme **ALNSCORE**. Les applications COBOL (en particulier les applications **CICS COBOL**) peuvent appeler des modèles d'IA (comme les modèles ONNX) en utilisant des **commandes CICS standard**, telles que `LINK PROGRAM(ALNSCORE)`.

**Pour quoi faire ?** Le but principal de cette interaction est d'**intégrer l'inférence IA (l'application d'un modèle entraîné à de nouvelles données pour faire une prédiction ou prendre une décision)** directement dans les **transactions critiques** et les flux de travail d'entreprise existants sur le mainframe. Cela permet de traiter les données là où elles résident déjà (co-localisation), offrant des avantages en termes de performance, de latence, de sécurité et de résilience.

Voici les cas d'utilisation spécifiques mentionnés dans les documents où les applications COBOL tirent parti de l'IA :

1.  **Détection de fraude** : Les applications CICS COBOL gérant les autorisations de cartes de crédit peuvent appeler le service de scoring MLz ALNSCORE pour **évaluer 100% des transactions en temps réel** afin de détecter la fraude avant qu'elle ne se produise. Le document montre un cas client qui est passé de l'évaluation de moins de 10% de ses transactions avec une latence supérieure à 80 ms à l'évaluation de 100% des transactions avec une latence de 1 ms en co-localisant son modèle sur IBM Z. Cela a permis d'économiser des millions de dollars en risque d'exposition à la fraude et d'augmenter la satisfaction client.
2.  **Lutte contre le blanchiment d'argent (AML)** : L'inférence de modèle IA est injectée dans les applications CICS COBOL pour le **filtrage AML en temps réel** dans le flux opérationnel des paiements instantanés. Cela répond aux exigences réglementaires plus strictes et réduit considérablement les faux positifs (jusqu'à 72% de réduction) et les coûts d'enquête manuelle. L'IA permet de détecter jusqu'à 6 fois plus d'activités illicites.
3.  **Scoring du risque de découvert (Core Banking)** : Machine Learning for z/OS est utilisé pour s'intégrer étroitement à la **plateforme bancaire de base COBOL** afin d' **automatiser et de prédire le risque de découvert**. L'IA augmente l'approche basée sur des règles existantes pour permettre des ajustements intelligents des limites de découvert, réduisant ainsi le risque d'exposition. L'IA peut détecter des modèles de dépenses saisonniers, des changements de salaire, des signes de désengagement client ou l'ajout de nouveaux comptes pour affiner le scoring.

Les documents soulignent que cette intégration est simplifiée, permettant aux applications COBOL d'invoquer des modèles ONNX en utilisant des commandes CICS standard. L'architecture matériel et logiciel (comme l'accélérateur d'IA intégré Telum II et le Deep Learning Compiler) est optimisée pour permettre cette inférence à faible latence et haut débit directement au cœur des transactions sur IBM Z.

Bien que les sources ne spécifient pas explicitement que COBOL est le *mécanisme* d'interaction pour tous les cas, elles mentionnent également l'utilisation d'autres capacités d'IA sur IBM Z qui pourraient bénéficier aux applications COBOL, comme **Db2 SQL Data Insights**. Cela permet d'exploiter des informations cachées dans les données Db2 directement via SQL, pour des tâches comme l'identification de similitudes, la prédiction de désabonnement client, l'identification de fraude ou la détermination de l'éligibilité à un prêt, ainsi que la recommandation de produits d'assurance, sans nécessiter de compétences en science des données complexes. Les applications COBOL interagissant déjà avec Db2 pourraient potentiellement tirer parti de ces capacités via des requêtes SQL améliorées par l'IA.


----------------


Oui, vous avez raison de soulever cette question. Les sources mentionnent bien des "containers" dans le contexte de l'IA sur IBM Z, et il est important de distinguer les différents usages du terme.

Dans les documents, le terme "container" est utilisé dans au moins deux sens :

1.  **Des structures de données spécifiques pour passer des informations dans un appel de programme COBOL/CICS**. Lorsque les applications CICS COBOL interagissent avec le service de scoring Machine Learning for z/OS (ALNSCORE), elles utilisent des commandes CICS comme `LINK PROGRAM(ALNSCORE)`. Ces commandes manipulent des "containers" (comme `Input Data container`, `Output Data container`, `Deploy ID container`, etc.) qui sont essentiellement des zones mémoire ou des structures de données utilisées par CICS pour empaqueter et transférer des informations entre programmes. **Ces "containers" ne sont PAS des conteneurs de workload au sens Docker.** Ils sont spécifiques au mécanisme de communication CICS.

2.  **Des conteneurs de workload standard (similaires à Docker) utilisés pour déployer des applications et des frameworks d'IA sous Linux sur IBM Z**. C'est dans ce contexte que le terme est utilisé de manière analogue aux conteneurs que l'on trouve dans les environnements modernes comme Docker ou Kubernetes. Les sources indiquent que :
    *   zCX (z/OS Container Extensions) est mentionné comme une "Container Foundation" et permet d'exécuter des charges de travail "via zCX". zCX est conçu pour permettre aux utilisateurs de z/OS d'exécuter des applications Linux conteneurisées.
    *   Des frameworks d'IA populaires et des serveurs d'inférence tels que TensorFlow, PyTorch, Snap ML, Triton Inference Server et le Deep Learning Compiler sont disponibles et optimisés pour fonctionner sur IBM Z et LinuxONE. Ils sont souvent rendus disponibles via un "IBM Container Registry" et peuvent être déployés dans des environnements conteneurisés comme zCX ou OpenShift.
    *   L'architecture OpenShift sur IBM Z utilise des concepts de conteneurs standard comme les "Deployment pod" et les "Application AI Server Container". OpenShift est une plateforme basée sur Kubernetes, qui gère des conteneurs conformes aux standards de l'industrie (comme OCI, qui est compatible avec Docker).
    *   Des fonctionnalités de sécurité avancées sont proposées pour protéger ces conteneurs, comme "Hyper Protect Container Runtime" et "Hyper Protect Confidential Container" pour IBM Z, ce qui renforce l'idée qu'il s'agit de conteneurs de workload standard nécessitant une sécurité renforcée pour les données sensibles.

Donc, en résumé, lorsque les sources parlent de faire interagir COBOL avec l'IA *via ALNSCORE*, les "containers" mentionnés sont des structures de données CICS. Cependant, les plateformes sous-jacentes qui *exécutent* les modèles d'IA (comme Machine Learning for z/OS, ou les frameworks Open Source via l'AI Toolkit) s'appuient fortement sur l'utilisation de conteneurs de workload standard (au sens Docker/Kubernetes) qui peuvent être déployés sur z/OS via zCX ou sur Linux on Z via OpenShift.

Votre sentiment est donc correct dans le sens où l'écosystème IA sur IBM Z, qui permet l'interaction avec COBOL, utilise bien des conteneurs au sens moderne du terme pour le déploiement des composants IA, notamment via zCX. C'est cette architecture conteneurisée sous Linux (rendue possible sur z/OS par zCX) qui héberge les services d'inférence appelés par les applications COBOL.
